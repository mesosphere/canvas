& when (@pod-enabled) {
  /* Pod */

  .pod {
    .element-spacing(pod, null, null);

    /* Pod Layout Variants */

    &-shorter {
      .element-spacing(pod, shorter, null);
    }

    &-short {
      .element-spacing(pod, short, null);
    }

    &-tall {
      .element-spacing(pod, tall, null);
    }

    &-taller {
      .element-spacing(pod, taller, null);
    }

    &-narrower {
      .element-spacing(pod, narrower, null);
    }

    &-narrow {
      .element-spacing(pod, narrow, null);
    }

    &-wide {
      .element-spacing(pod, wide, null);
    }

    &-wider {
      .element-spacing(pod, wider, null);
    }
  }

  [class^='pod'],
  [class*=' pod'] {

    &.flush {
      margin-bottom: 0;
      margin-left: 0;
      margin-right: 0;
      margin-top: 0;
      padding-bottom: 0;
      padding-left: 0;
      padding-right: 0;
      padding-top: 0;
    }

    &.flush-vertical {
      margin-bottom: 0;
      margin-top: 0;
      padding-bottom: 0;
      padding-top: 0;
    }

    &.flush-horizontal {
      margin-left: 0;
      margin-right: 0;
      padding-left: 0;
      padding-right: 0;
    }

    &.flush-top {
      margin-top: 0;
      padding-top: 0;
    }

    &.flush-bottom {
      margin-bottom: 0;
      padding-bottom: 0;
    }

    &.flush-left {
      margin-left: 0;
      padding-left: 0;
    }

    &.flush-right {
      margin-right: 0;
      padding-right: 0;
    }
  }
}

& when (@layout-screen-small-enabled) {

  @media (min-width: @layout-screen-small-min-width) {

    & when (@pod-enabled) and (@pod-screen-small-enabled) {
      /* Pod */

      .pod {
        .element-spacing(pod, null, screen-small);

        /* Pod Layout Variants */

        &-shorter {
          .element-spacing(pod, shorter, screen-small);
        }

        &-short {
          .element-spacing(pod, short, screen-small);
        }

        &-tall {
          .element-spacing(pod, tall, screen-small);
        }

        &-taller {
          .element-spacing(pod, taller, screen-small);
        }

        &-narrower {
          .element-spacing(pod, narrower, screen-small);
        }

        &-narrow {
          .element-spacing(pod, narrow, screen-small);
        }

        &-wide {
          .element-spacing(pod, wide, screen-small);
        }

        &-wider {
          .element-spacing(pod, wider, screen-small);
        }
      }
    }
  }
}

& when (@layout-screen-medium-enabled) and (@pod-screen-medium-enabled) {

  @media (min-width: @layout-screen-medium-min-width) {

    & when (@pod-enabled) and (@pod-screen-medium-enabled) {
      /* Pod */

      .pod {
        .element-spacing(pod, null, screen-medium);

        /* Pod Layout Variants */

        &-shorter {
          .element-spacing(pod, shorter, screen-medium);
        }

        &-short {
          .element-spacing(pod, short, screen-medium);
        }

        &-tall {
          .element-spacing(pod, tall, screen-medium);
        }

        &-taller {
          .element-spacing(pod, taller, screen-medium);
        }

        &-narrower {
          .element-spacing(pod, narrower, screen-medium);
        }

        &-narrow {
          .element-spacing(pod, narrow, screen-medium);
        }

        &-wide {
          .element-spacing(pod, wide, screen-medium);
        }

        &-wider {
          .element-spacing(pod, wider, screen-medium);
        }
      }
    }
  }
}

& when (@layout-screen-large-enabled) and (@pod-screen-large-enabled) {

  @media (min-width: @layout-screen-large-min-width) {

    & when (@pod-enabled) and (@pod-screen-large-enabled) {
      /* Pod */

      .pod {
        .element-spacing(pod, null, screen-large);

        /* Pod Layout Variants */

        &-shorter {
          .element-spacing(pod, shorter, screen-large);
        }

        &-short {
          .element-spacing(pod, short, screen-large);
        }

        &-tall {
          .element-spacing(pod, tall, screen-large);
        }

        &-taller {
          .element-spacing(pod, taller, screen-large);
        }

        &-narrower {
          .element-spacing(pod, narrower, screen-large);
        }

        &-narrow {
          .element-spacing(pod, narrow, screen-large);
        }

        &-wide {
          .element-spacing(pod, wide, screen-large);
        }

        &-wider {
          .element-spacing(pod, wider, screen-large);
        }
      }
    }
  }
}

& when (@layout-screen-jumbo-enabled) and (@pod-screen-jumbo-enabled) {

  @media (min-width: @layout-screen-jumbo-min-width) {

    & when (@pod-enabled) and (@pod-screen-jumbo-enabled) {
      /* Pod */

      .pod {
        .element-spacing(pod, null, screen-jumbo);

        /* Pod Layout Variants */

        &-shorter {
          .element-spacing(pod, shorter, screen-jumbo);
        }

        &-short {
          .element-spacing(pod, short, screen-jumbo);
        }

        &-tall {
          .element-spacing(pod, tall, screen-jumbo);
        }

        &-taller {
          .element-spacing(pod, taller, screen-jumbo);
        }

        &-narrower {
          .element-spacing(pod, narrower, screen-jumbo);
        }

        &-narrow {
          .element-spacing(pod, narrow, screen-jumbo);
        }

        &-wide {
          .element-spacing(pod, wide, screen-jumbo);
        }

        &-wider {
          .element-spacing(pod, wider, screen-jumbo);
        }
      }
    }
  }
}
